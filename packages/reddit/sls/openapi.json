{
  "openapi": "3.0.1",
  "info": {
    "title": "Reddit TypeScript SDK API",
    "version": "1.0.0",
    "description": "Single entry-point API for all Reddit TypeScript SDK functions via a wrapper Lambda",
    "contact": {
      "name": "Microfox Dev Support",
      "email": "support@microfox.com"
    }
  },
  "servers": [
    {
      "url": "https://api.microfox.com/c/reddit",
      "description": "Unified wrapper endpoint"
    }
  ],
  "paths": {
    "/validateAccessToken": {
      "post": {
        "operationId": "validateAccessToken",
        "summary": "Validates the current access token.",
        "description": "This function checks if the current access token is valid. It performs a validation process on the existing access token and returns a boolean result. The function is useful for verifying the authenticity and expiration status of the token before making authenticated requests.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the validateAccessToken sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": []
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isValid": {
                      "type": "boolean",
                      "description": "Indicates whether the access token is valid"
                    }
                  },
                  "required": [
                    "isValid"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or missing access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/refreshAccessToken": {
      "post": {
        "operationId": "refreshAccessToken",
        "summary": "Refreshes the access token using a refresh token.",
        "description": "This function obtains a new access token using the provided refresh token. It is used to maintain continuous access to the API without requiring the user to re-authenticate. The function does not return a value, suggesting it updates the token internally.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the refreshAccessToken sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The refresh token obtained during initial authorization."
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token refreshed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred while refreshing the token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMe": {
      "post": {
        "operationId": "getMe",
        "summary": "Retrieves information about the currently authenticated user.",
        "description": "This function fetches the user data for the authenticated user. It requires no parameters and returns an object containing the user's information. This is useful for getting details about the current user's account or profile.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getMe sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": []
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the user"
                    },
                    "username": {
                      "type": "string",
                      "description": "The username of the user"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "The email address of the user"
                    },
                    "name": {
                      "type": "string",
                      "description": "The full name of the user"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the user account was created"
                    }
                  },
                  "required": [
                    "id",
                    "username",
                    "email"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/getUserPreferences": {
      "post": {
        "operationId": "getUserPreferences",
        "summary": "Retrieves the preferences of the currently authenticated user.",
        "description": "This function fetches the user's preferences for the currently authenticated user. It does not require any parameters and returns an object containing various preference settings. The preferences are returned as key-value pairs, where the keys are preference names and the values can be of any type.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserPreferences sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": []
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An object containing the user's preferences"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateUserPreferences": {
      "post": {
        "operationId": "updateUserPreferences",
        "summary": "Updates the preferences of the currently authenticated user.",
        "description": "This function modifies the user's preferences by accepting a record of new preference settings. It updates the preferences for the authenticated user and returns an object containing the updated preferences.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the updateUserPreferences sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "prefs": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "An object containing the new preferences"
                              }
                            },
                            "required": [
                              "prefs"
                            ],
                            "description": "Configuration object containing user preferences"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with updated user preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An object containing the updated preferences"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserKarma": {
      "post": {
        "operationId": "getUserKarma",
        "summary": "Retrieves the karma breakdown for the currently authenticated user.",
        "description": "This function fetches the user's karma information, including both link and comment karma. It requires no input parameters and returns an object containing the karma breakdown for the authenticated user. The function is useful for applications that need to display or analyze a user's Reddit karma statistics.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserKarma sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": []
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "link_karma": {
                        "type": "number",
                        "description": "The user's karma from submitted links"
                      },
                      "comment_karma": {
                        "type": "number",
                        "description": "The user's karma from comments"
                      }
                    },
                    "required": [
                      "link_karma",
                      "comment_karma"
                    ]
                  },
                  "description": "An object containing the user's karma breakdown"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/getUserTrophies": {
      "post": {
        "operationId": "getUserTrophies",
        "summary": "Retrieves the trophies for the currently authenticated user.",
        "description": "This function fetches the user's trophies for the currently authenticated user. It does not require any parameters and returns an object representing the user's trophies. The function is useful for displaying a user's achievements or rewards within an application.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserTrophies sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": []
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An object representing the user's trophies",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUser": {
      "post": {
        "operationId": "getUser",
        "summary": "Retrieves information about a specific user.",
        "description": "This function fetches user data for a specified username. It takes a single parameter 'username' and returns an object containing the user's information. The function is useful for obtaining detailed user data in applications that require user management or profile display.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUser sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The username of the user to retrieve."
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "The username of the retrieved user"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the user"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Email address of the user"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the user account was created"
                    }
                  },
                  "required": [
                    "username",
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid username provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserContent": {
      "post": {
        "operationId": "getUserContent",
        "summary": "Retrieves content (posts and comments) submitted by a specific user.",
        "description": "The getUserContent function fetches user-generated content from various sections of a user's profile. It allows for retrieval of posts, comments, and other user activities based on the specified section. The function also supports optional parameters for filtering and pagination of the results.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserContent sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The username of the user whose content to retrieve."
                          },
                          {
                            "type": "string",
                            "enum": [
                              "overview",
                              "submitted",
                              "comments",
                              "upvoted",
                              "downvoted",
                              "hidden",
                              "saved",
                              "gilded"
                            ],
                            "description": "The section of content to retrieve."
                          },
                          {
                            "type": "object",
                            "description": "Optional parameters for filtering and sorting the results.",
                            "properties": {
                              "after": {
                                "type": "string",
                                "description": "The full name of a thing to fetch after."
                              },
                              "before": {
                                "type": "string",
                                "description": "The full name of a thing to fetch before."
                              },
                              "count": {
                                "type": "number",
                                "description": "The number of items already seen in this listing. Starts at 0."
                              },
                              "limit": {
                                "type": "number",
                                "description": "The maximum number of items to return in this slice of the listing."
                              },
                              "show": {
                                "type": "string",
                                "description": "Show specific content (e.g., 'all', 'given')."
                              },
                              "sr_detail": {
                                "type": "string",
                                "description": "Expand subreddit information."
                              }
                            }
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "description": "Post object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Comment object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "parentId": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getSubredditInfo": {
      "post": {
        "operationId": "getSubredditInfo",
        "summary": "Retrieves information about a specific subreddit.",
        "description": "This function fetches detailed information about a given subreddit. It takes the subreddit name as input and returns an object containing various details about the subreddit. This can be useful for applications that need to display or analyze subreddit information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getSubredditInfo sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The name of the subreddit to retrieve information for"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the subreddit"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the subreddit"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subreddit"
                    },
                    "subscribers": {
                      "type": "integer",
                      "description": "The number of subscribers to the subreddit"
                    },
                    "created_utc": {
                      "type": "number",
                      "description": "The creation date of the subreddit in UTC timestamp"
                    },
                    "public_description": {
                      "type": "string",
                      "description": "The public description of the subreddit"
                    },
                    "over18": {
                      "type": "boolean",
                      "description": "Whether the subreddit is marked as NSFW (Not Safe For Work)"
                    }
                  },
                  "required": [
                    "name",
                    "title",
                    "subscribers"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid subreddit name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/searchSubreddit": {
      "post": {
        "operationId": "searchSubreddit",
        "summary": "Searches for posts and other content within a specific subreddit.",
        "description": "The searchSubreddit function allows users to search for content within a specified subreddit using a given query. It provides optional parameters for filtering and sorting the results, including time period, sorting method, and pagination options. The function returns an array of search results matching the specified criteria.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the searchSubreddit sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The name of the subreddit to search within"
                          },
                          {
                            "type": "string",
                            "description": "The search query"
                          },
                          {
                            "type": "object",
                            "description": "Optional parameters for filtering and sorting the results",
                            "properties": {
                              "after": {
                                "type": "string",
                                "description": "The full name of a thing to fetch after"
                              },
                              "before": {
                                "type": "string",
                                "description": "The full name of a thing to fetch before"
                              },
                              "count": {
                                "type": "number",
                                "description": "The number of items already seen in this listing. Starts at 0"
                              },
                              "limit": {
                                "type": "number",
                                "description": "The maximum number of items to return in this slice of the listing"
                              },
                              "show": {
                                "type": "string",
                                "description": "Show specific content (e.g., 'all', 'given')"
                              },
                              "sr_detail": {
                                "type": "string",
                                "description": "Expand subreddit information"
                              },
                              "sort": {
                                "type": "string",
                                "enum": [
                                  "relevance",
                                  "hot",
                                  "top",
                                  "new",
                                  "comments"
                                ],
                                "description": "The sorting method for the search results"
                              },
                              "t": {
                                "type": "string",
                                "enum": [
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year",
                                  "all"
                                ],
                                "description": "The time period to search within"
                              }
                            }
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "SearchResult",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the search result"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the post or content"
                      },
                      "author": {
                        "type": "string",
                        "description": "Author of the post or content"
                      },
                      "created_utc": {
                        "type": "number",
                        "description": "Creation timestamp in UTC"
                      },
                      "score": {
                        "type": "number",
                        "description": "Score or upvotes of the post or content"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL of the post or content"
                      },
                      "num_comments": {
                        "type": "number",
                        "description": "Number of comments on the post"
                      },
                      "subreddit": {
                        "type": "string",
                        "description": "Name of the subreddit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the internal server issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "operationId": "search",
        "summary": "Search across all of Reddit for posts and other content.",
        "description": "This function allows users to search for posts and other content across all subreddits on Reddit. It provides options for filtering and sorting the search results, including parameters for pagination, sorting methods, and time periods. The function returns an array of search results matching the given query and optional parameters.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the search sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The search query"
                          },
                          {
                            "type": "object",
                            "description": "Optional parameters for filtering and sorting the results",
                            "properties": {
                              "after": {
                                "type": "string",
                                "description": "The full name of a thing to fetch after"
                              },
                              "before": {
                                "type": "string",
                                "description": "The full name of a thing to fetch before"
                              },
                              "count": {
                                "type": "number",
                                "description": "The number of items already seen in this listing. Starts at 0"
                              },
                              "limit": {
                                "type": "number",
                                "description": "The maximum number of items to return in this slice of the listing"
                              },
                              "show": {
                                "type": "string",
                                "description": "Show specific content (e.g., 'all', 'given')"
                              },
                              "sr_detail": {
                                "type": "string",
                                "description": "Expand subreddit information"
                              },
                              "sort": {
                                "type": "string",
                                "enum": [
                                  "relevance",
                                  "hot",
                                  "top",
                                  "new",
                                  "comments"
                                ],
                                "description": "The sorting method for the search results"
                              },
                              "t": {
                                "type": "string",
                                "enum": [
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year",
                                  "all"
                                ],
                                "description": "The time period to search within"
                              }
                            }
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "SearchResult",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the search result"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the post or content"
                      },
                      "subreddit": {
                        "type": "string",
                        "description": "Name of the subreddit where the content was posted"
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the content author"
                      },
                      "created_utc": {
                        "type": "number",
                        "description": "UTC timestamp of when the content was created"
                      },
                      "score": {
                        "type": "number",
                        "description": "Score or upvotes of the content"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL of the content"
                      },
                      "num_comments": {
                        "type": "number",
                        "description": "Number of comments on the post"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/submitComment": {
      "post": {
        "operationId": "submitComment",
        "summary": "Submits a comment to a post or another comment.",
        "description": "This function adds a new comment to a specified post or existing comment. It takes the parent ID (which can be a post or comment ID) and the text content of the new comment as parameters. The function returns the newly created comment object upon successful submission.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the submitComment sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the parent post or comment (e.g., 't3_12345')"
                          },
                          {
                            "type": "string",
                            "description": "The text of the comment"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful comment submission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the submitted comment"
                    },
                    "text": {
                      "type": "string",
                      "description": "The text content of the submitted comment"
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The ID of the parent post or comment"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the comment was created"
                    }
                  },
                  "required": [
                    "id",
                    "text",
                    "parentId",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/submitPost": {
      "post": {
        "operationId": "submitPost",
        "summary": "Submits a new post to a specified subreddit.",
        "description": "This function creates a new text or link post in the specified subreddit. It takes the subreddit name, post title, and content object as parameters. The content can be either text for a self post or a URL for a link post.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the submitPost sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The name of the subreddit to submit to"
                          },
                          {
                            "type": "string",
                            "description": "The title of the post"
                          },
                          {
                            "type": "object",
                            "description": "The content of the post",
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "The text content of a self post"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL of a link post"
                              }
                            },
                            "oneOf": [
                              {
                                "required": [
                                  "text"
                                ]
                              },
                              {
                                "required": [
                                  "url"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful submission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the submitted post"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the submitted post"
                    },
                    "subreddit": {
                      "type": "string",
                      "description": "Name of the subreddit where the post was submitted"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Text content of the post (if it's a self post)"
                        },
                        "url": {
                          "type": "string",
                          "description": "URL of the post (if it's a link post)"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the post was created"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "subreddit",
                    "content",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server-side issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vote": {
      "post": {
        "operationId": "vote",
        "summary": "Casts a vote on a post or comment.",
        "description": "The vote function allows users to cast an upvote, downvote, or remove a vote on a specified post or comment. It takes the item's full name identifier and a numeric vote direction as parameters. This function is essential for user interaction and content ranking within the platform.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the vote sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the item to vote on (e.g., 't3_12345')"
                          },
                          {
                            "type": "number",
                            "description": "The vote direction (1 for upvote, -1 for downvote, 0 to remove vote)",
                            "enum": [
                              1,
                              -1,
                              0
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vote successfully cast",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the vote was successfully cast"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deletePost": {
      "post": {
        "operationId": "deletePost",
        "summary": "Generate OpenAPI specification for the deletePost function",
        "description": "Analyze the provided function documentation for deletePost and create a comprehensive OpenAPI specification. This includes generating a summary, description, arguments structure, and responses schema based on the given information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the deletePost sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "summary": {
                                "type": "string",
                                "description": "One clear sentence describing what this function does"
                              },
                              "description": {
                                "type": "string",
                                "description": "2-3 sentences explaining the function's purpose and behavior"
                              },
                              "arguments": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "array"
                                    ]
                                  },
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "items"
                                ]
                              },
                              "responses": {
                                "type": "object",
                                "properties": {
                                  "200": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/json": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "content"
                                    ]
                                  },
                                  "400": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  },
                                  "500": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  }
                                },
                                "required": [
                                  "200",
                                  "400",
                                  "500"
                                ]
                              }
                            },
                            "required": [
                              "summary",
                              "description",
                              "arguments",
                              "responses"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "specification": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "arguments": {
                          "type": "object"
                        },
                        "responses": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary",
                        "description",
                        "arguments",
                        "responses"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/editUserText": {
      "post": {
        "operationId": "editUserText",
        "summary": "Edits the text content of a user's post or comment.",
        "description": "This function allows modification of the text content for an existing post or comment. It takes the item's full name identifier and the new text as parameters, then returns the edited post or comment object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the editUserText sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the item to edit (e.g., 't3_12345')"
                          },
                          {
                            "type": "string",
                            "description": "The new text content"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The full name of the edited item"
                    },
                    "text": {
                      "type": "string",
                      "description": "The updated text content"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "post",
                        "comment"
                      ],
                      "description": "The type of the edited item"
                    }
                  },
                  "required": [
                    "id",
                    "text",
                    "type"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/hidePost": {
      "post": {
        "operationId": "hidePost",
        "summary": "Execute hidePost function",
        "description": "Executes the hidePost function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the hidePost sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/unhidePost": {
      "post": {
        "operationId": "unhidePost",
        "summary": "Execute unhidePost function",
        "description": "Executes the unhidePost function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the unhidePost sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/saveItem": {
      "post": {
        "operationId": "saveItem",
        "summary": "Generate OpenAPI specification for the saveItem function",
        "description": "Analyze the provided function documentation for saveItem and create an OpenAPI specification. This includes generating a summary, description, arguments structure, and responses schema based on the given information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the saveItem sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "summary": {
                                "type": "string",
                                "description": "One clear sentence describing what this function does"
                              },
                              "description": {
                                "type": "string",
                                "description": "2-3 sentences explaining the function's purpose and behavior"
                              },
                              "arguments": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "array"
                                    ]
                                  },
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "items"
                                ]
                              },
                              "responses": {
                                "type": "object",
                                "properties": {
                                  "200": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/json": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "content"
                                    ]
                                  },
                                  "400": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  },
                                  "500": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  }
                                },
                                "required": [
                                  "200",
                                  "400",
                                  "500"
                                ]
                              }
                            },
                            "required": [
                              "summary",
                              "description",
                              "arguments",
                              "responses"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "specification": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "arguments": {
                          "type": "object"
                        },
                        "responses": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary",
                        "description",
                        "arguments",
                        "responses"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/unsaveItem": {
      "post": {
        "operationId": "unsaveItem",
        "summary": "Execute unsaveItem function",
        "description": "Executes the unsaveItem function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the unsaveItem sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/reportItem": {
      "post": {
        "operationId": "reportItem",
        "summary": "Reports a post or comment to Reddit moderators.",
        "description": "The reportItem function allows users to report a post or comment on Reddit to the moderators. It takes two parameters: the full name of the item to report and the reason for reporting. This function is useful for flagging content that violates Reddit's rules or community guidelines.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the reportItem sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the item to report (e.g., 't3_12345')"
                          },
                          {
                            "type": "string",
                            "description": "The reason for reporting the item"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully reported the item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the report was successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getInfo": {
      "post": {
        "operationId": "getInfo",
        "summary": "Retrieves information about multiple items (posts, comments, or subreddits) by their IDs.",
        "description": "The getInfo function fetches data for multiple items at once using their full names. It accepts an array of item IDs and returns an array of objects containing detailed information about the requested items. This function is useful for batch retrieval of various Reddit entities like posts, comments, or subreddits.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getInfo sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of full names of items to retrieve (e.g., ['t3_12345', 't1_67890'])."
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "description": "Post object"
                      },
                      {
                        "type": "object",
                        "description": "Comment object"
                      },
                      {
                        "type": "object",
                        "description": "Subreddit object"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/getMoreComments": {
      "post": {
        "operationId": "getMoreComments",
        "summary": "Retrieves additional comments for a specified post.",
        "description": "The getMoreComments function fetches additional comments that are not initially loaded in a post's comment tree. It takes the post's full name and an array of comment IDs as input, allowing for targeted retrieval of specific comments. This function is useful for implementing \"load more comments\" functionality in Reddit-like applications.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getMoreComments sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the post (e.g., 't3_12345')"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of comment IDs to retrieve"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful retrieval of additional comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Comment object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the comment"
                      },
                      "body": {
                        "type": "string",
                        "description": "The content of the comment"
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the comment author"
                      },
                      "created_utc": {
                        "type": "number",
                        "description": "Timestamp of when the comment was created"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPost": {
      "post": {
        "operationId": "getPost",
        "summary": "Retrieves a specific post by its ID.",
        "description": "This function fetches a single post from the platform using its full name as the identifier. It allows users to retrieve detailed information about a specific post by providing its unique ID in the format 't3_12345'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getPost sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "string",
                            "description": "The full name of the post to retrieve (e.g., 't3_12345')"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "oauth2"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_ID"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_ID"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_CLIENT_SECRET"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_CLIENT_SECRET"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REDIRECT_URI"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REDIRECT_URI"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_ACCESS_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_ACCESS_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "REDDIT_REFRESH_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of REDDIT_REFRESH_TOKEN"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SCOPES"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SCOPES"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/reddit"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The full name of the post"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the post"
                    },
                    "content": {
                      "type": "string",
                      "description": "The content of the post"
                    },
                    "author": {
                      "type": "string",
                      "description": "The username of the post author"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date and time of the post"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "content",
                    "author",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid post ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the internal server issue"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}