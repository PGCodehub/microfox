name: Sync Docs and Package Info

on:
  push:
    branches:
      - main
    paths:
      - 'packages/*/docs/**/*.md'
      - '**/package-info.json'

jobs:
  sync-docs-and-package-info:
    name: üîÑ Sync Docs and Package Info
    runs-on: ubuntu-latest
    steps:
      # 1) Get the full git history for accurate git-based timestamps
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref }}

      # 2) Detect changed files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          base_sha: ${{ github.event.before || 'HEAD~1' }}
          sha: ${{ github.event.after || 'HEAD' }}
          files_yaml: |
            docs:
              - 'packages/*/docs/**/*.md'
            package_info:
              - '**/package-info.json'

      # 3) Install Node.js
      - name: Use Node.js 23.x
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      # 4) Install dependencies
      - name: Install dependencies
        run: |
          cd scripts
          npm i

      # 5) Update package-info.json files for docs changes
      - name: Update package-info.json for docs changes
        if: steps.changed-files.outputs.docs_added_files != '' || steps.changed-files.outputs.docs_deleted_files != '' || steps.changed-files.outputs.docs_modified_files != ''
        env:
          ADDED_DOCS: ${{ steps.changed-files.outputs.docs_added_files }}
          REMOVED_DOCS: ${{ steps.changed-files.outputs.docs_deleted_files }}
          MODIFIED_DOCS: ${{ steps.changed-files.outputs.docs_modified_files }}
        run: |
          echo "üìù Docs files changed, updating package-info.json files..."
          echo "Added: $ADDED_DOCS"
          echo "Removed: $REMOVED_DOCS"
          echo "Modified: $MODIFIED_DOCS"
          cd scripts
          npm run update:readme-map

      # 6) Commit updated package-info.json files if there are changes
      - name: Commit updated package-info.json files
        if: steps.changed-files.outputs.docs_added_files != '' || steps.changed-files.outputs.docs_deleted_files != '' || steps.changed-files.outputs.docs_modified_files != ''
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore: update package-info.json readme_map for docs changes'
          file_pattern: '**/package-info.json'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          skip_dirty_check: false

      # 7) Index package info in database (runs for both docs and package-info changes)
      - name: Index updated package info
        if: steps.changed-files.outputs.docs_added_files != '' || steps.changed-files.outputs.docs_deleted_files != '' || steps.changed-files.outputs.docs_modified_files != '' || steps.changed-files.outputs.package_info_any_changed == 'true'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "üîç Indexing package info in database..."
          cd scripts
          npm run save:package-info

      # 8) Index docs in database (runs for both docs and package-info changes)
      - name: Index docs
        if: steps.changed-files.outputs.docs_added_files != '' || steps.changed-files.outputs.docs_deleted_files != '' || steps.changed-files.outputs.docs_modified_files != '' || steps.changed-files.outputs.package_info_any_changed == 'true'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "üìñ Indexing docs in database..."
          cd scripts
          npm run embed:docs

      # 9) Summary
      - name: Summary
        run: |
          echo "‚úÖ Workflow completed!"
          if [[ "${{ steps.changed-files.outputs.docs_added_files }}" != "" || "${{ steps.changed-files.outputs.docs_deleted_files }}" != "" || "${{ steps.changed-files.outputs.docs_modified_files }}" != "" ]]; then
            echo "üìö Updated package-info.json files for docs changes"
          fi
          if [[ "${{ steps.changed-files.outputs.docs_added_files }}" != "" || "${{ steps.changed-files.outputs.docs_deleted_files }}" != "" || "${{ steps.changed-files.outputs.docs_modified_files }}" != "" || "${{ steps.changed-files.outputs.package_info_any_changed }}" == "true" ]]; then
            echo "üîç Indexed package info in database"
            echo "üìñ Indexed docs in database"
          else
            echo "‚ÑπÔ∏è No relevant changes detected"
          fi 